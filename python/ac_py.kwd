//
// Pythonキーワードファイル色分け定義
// $Id: ac_py.kwd,v 1.2 2021/02/19 06:37:49 chiharu Exp $
//
// NOTE: コンテキスト利用方法
//	AWK はシンプルな言語であるが、1つだけ色分け表示を難しくしている規則が
//	ある。それは、/ が場所によって割り算であったり、正規表現の始まりであっ
//	たり変化することである。
//
//	以下のサンプルでは、コンテキスト1と2を使って、ある程度正確に割り算か
//	正規表現化を判定できるようにしている。
//
//	コンテキスト1は、/が見つかると正規表現の始まりと見なすコンテキスト、
//	同様に2は、/を割り算記号と見なすコンテキストである。それ以外ほとんどの
//	文法は同じなので、Context 1, 2: { ... } の中にまとめて定義している。
//	それぞれAWK言語の1要素にマッチするたびに、もしもその直後に/があったら
//	どちらとして扱うべきかによってコンテキスト1、または2へ切り替えている。
//	そして最後に行末で、コンテキスト1へ戻している。
//
//	これにより100%正しくはないけれども、多くの場合、満足な色分け表示をする
//	ことができる。
//

Id:			"py"
Title:			"python"
Extensions:		"py"
LineComment:		"#"
IdCharacters:		"$_"
HeadingPattern:		/^\{/

/////////////////////////////////////////////////////////////////////////////
// コメント、文字列、数値、正規表現

Context 1:
{
	/\/[^\/\\]*(\\.[^\/\\]*)*\/?/,	FgRegularExpression, GoTo 2
}

Context 1, 2:
{
	/#.*/,				FgComment		// コメント
	/0x[\da-f]+l?/i,		FgNumber, GoTo 2	// 16進数
	/(\d+\.?\d*|\.\d+)([Ee][-+]?\d+)?/, FgNumber, GoTo 2	// 整数または浮動小数点数

	/"[^"\\]*(\\.[^"\\]*)*"?/,	FgString, GoTo 2
	/'[^'\\]*(\\.[^'\\]*)*'?/,	FgString, GoTo 2

	// キーワード
	"BEGIN",			FgKeyword, GoTo 2
	"END",				FgKeyword, GoTo 2

	"break",			FgKeyword, GoTo 1
	"continue",			FgKeyword, GoTo 1
	"delete",			FgKeyword, GoTo 1
	"do",				FgKeyword, GoTo 1
	"else",				FgKeyword, GoTo 1
	"exit",				FgKeyword, GoTo 1
	"for",				FgKeyword, GoTo 1
	"func",				FgKeyword, GoTo 1
	"function",			FgKeyword, GoTo 1
	"if",				FgKeyword, GoTo 1
	"in",				FgKeyword, GoTo 1
	"next",				FgKeyword, GoTo 1
	"while",			FgKeyword, GoTo 1

	// 組み込み関数
	"atan2",			FgBuiltinFunction, GoTo 1
	"close",			FgBuiltinFunction, GoTo 1
	"cos",				FgBuiltinFunction, GoTo 1
	"exp",				FgBuiltinFunction, GoTo 1
	"gsub",				FgBuiltinFunction, GoTo 1
	"index",			FgBuiltinFunction, GoTo 1
	"int",				FgBuiltinFunction, GoTo 1
	"jindex",			FgBuiltinFunction, GoTo 1
	"jlength",			FgBuiltinFunction, GoTo 1
	"jsubstr",			FgBuiltinFunction, GoTo 1
	"length",			FgBuiltinFunction, GoTo 1
	"log",				FgBuiltinFunction, GoTo 1
	"match",			FgBuiltinFunction, GoTo 1
	"print",			FgBuiltinFunction, GoTo 1
	"printf",			FgBuiltinFunction, GoTo 1
	"rand",				FgBuiltinFunction, GoTo 1
	"sin",				FgBuiltinFunction, GoTo 1
	"split",			FgBuiltinFunction, GoTo 1
	"sprintf",			FgBuiltinFunction, GoTo 1
	"sqrt",				FgBuiltinFunction, GoTo 1
	"srand",			FgBuiltinFunction, GoTo 1
	"sub",				FgBuiltinFunction, GoTo 1
	"substr",			FgBuiltinFunction, GoTo 1
	"system",			FgBuiltinFunction, GoTo 1
	"tolower",			FgBuiltinFunction, GoTo 1
	"toupper",			FgBuiltinFunction, GoTo 1

	// 定義済み変数
	"ARGC",				FgPredefinedSymbol, GoTo 2
	"ARGV",				FgPredefinedSymbol, GoTo 2
	"ENVIRON",			FgPredefinedSymbol, GoTo 2
	"FILENAME",			FgPredefinedSymbol, GoTo 2
	"FNR",				FgPredefinedSymbol, GoTo 2
	"FS",				FgPredefinedSymbol, GoTo 2
	"IGNORECASE",			FgPredefinedSymbol, GoTo 2
	"NF",				FgPredefinedSymbol, GoTo 2
	"NR",				FgPredefinedSymbol, GoTo 2
	"OFMT",				FgPredefinedSymbol, GoTo 2
	"OFS",				FgPredefinedSymbol, GoTo 2
	"ORS",				FgPredefinedSymbol, GoTo 2
	"RLENGTH",			FgPredefinedSymbol, GoTo 2
	"RS",				FgPredefinedSymbol, GoTo 2
	"RSTART ",			FgPredefinedSymbol, GoTo 2
	"SUBSEP",			FgPredefinedSymbol, GoTo 2

	// 一般の変数
	/\$[A-Za-z0-9_]+/,		FgIdentifier, GoTo 2

	// 記号は種類による
	/[)\]]+/,			FgText, GoTo 2
	/(\+\+|--)/,			FgText, GoTo 2
	/[!%&(*+,-\/:;<=>?[^{|}~]+/,	FgText, GoTo 1

	// 最後に行末で戻す
	/$/,				GoTo 1
}
